.data
matrix: .space 1600                   # Reservamos espacio para una matriz de 5x5 de enteros (4 bytes por cada posición)
newline: .string "\n"                # Cadena para nueva línea
space: .string " "                   # Espacio entre números
text: .string "A-C B-C C-C D-C"      # Definimos el string "A-C B-C C-C D-C"

.text
.globl main
main:
    la t1, matrix                    # t1 apunta al inicio de la matriz
    li t2, 400                       # t2 contiene el tamaño total de la matriz en bytes
    la t3, text                      # t3 apunta a la cadena "A-C B-C C-C D-C"

    # Llenar la matriz 5x5 con "A-C B-C C-C D-C" en cada posición
fill_matrix:
    li t4, 16                        # Número de bytes en cada cadena
copy_text:
    lb t5, 0(t3)                     # Cargar el byte actual de "A-C B-C C-C D-C" en t5
    sb t5, 0(t1)                     # Guardar el byte en la posición actual de la matriz
    addi t1, t1, 1                   # Avanzar al siguiente byte en la matriz
    addi t3, t3, 1                   # Avanzar al siguiente byte en "A-C B-C C-C D-C"
    addi t4, t4, -1                  # Decrementamos el contador de bytes restantes
    bnez t4, copy_text               # Continuar hasta copiar todos los bytes de "A-C B-C C-C D-C"

    la t3, text                      # Resetear t3 al inicio de "A-C B-C C-C D-C"
    la t5, matrix                    # Reiniciar t5 al inicio de la matriz
    sub t6, t1, t5                   # Calcular cuántos bytes se han llenado
    blt t6, t2, fill_matrix          # Continuar llenando hasta alcanzar el tamaño total de la matriz

    # Reset de t1 para apuntar de nuevo al inicio de la matriz
    la t1, matrix

    # Imprimir la matriz 5x5
print_matrix:
    li t3, 5                         # Contador para 5 elementos por fila
print_row:
    mv a0, t1                        # Cargar la dirección actual de la cadena en a0
    li a7, 4                         # Código de syscall para imprimir cadena
    ecall                            # Llamada de sistema para imprimir el string

    addi t1, t1, 16                  # Avanzamos al siguiente string en la matriz (16 bytes por cadena)
    addi t3, t3, -1                  # Decrementamos el contador de fila
    bnez t3, print_row               # Si no hemos llegado al final de la fila, continuar imprimiendo

    # Imprimir nueva línea después de cada fila
    la a0, newline                   # Imprimir salto de línea al final de cada fila
    li a7, 4                         # Código de syscall para imprimir cadena
    ecall

    # Repetir para cada fila
    la t5, matrix                    # Reiniciamos t5 con el inicio de la matriz
    sub t6, t1, t5                   # Calculamos cuántos bytes hemos recorrido
    blt t6, t2, print_matrix         # Si no hemos llegado al final de la matriz, repetir

    # Terminar el programa
    li a7, 10                        # Código de syscall para terminar el programa
    ecall
